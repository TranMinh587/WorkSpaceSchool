--Syntax

SOME OF THE MOST IMPORTANT SQL COMMANDS

SELECT - extracts data from a database
UPDATE - updates data in a database
DELETE - deletes data from a database
INSERT INTO - inserts new data into a database
CREATE DATABASE - creates a new database
ALTER DATABASE - modifies a database
CREATE TABLE - creates a new table
ALTER TABLE - modifies a table
DROP TABLE - deletes a table
CREATE INDEX - creates an index (search key)
DROP INDEX - deletes an index


--Data type

-String Data Types
CHAR(size)	A FIXED length string (can contain letters, numbers, and special characters). 
    The size parameter specifies the column length in characters - can be from 0 to 255. Default is 1
VARCHAR(size)	A VARIABLE length string (can contain letters, numbers, and special characters). 
    The size parameter specifies the maximum string length in characters - can be from 0 to 65535

-Numeric Data Types

BIT(size)	A bit-value type. 
    The number of bits per value is specified in size. 
    The size parameter can hold a value from 1 to 64. 
    The default value for size is 1.
BOOL	Zero is considered as false, nonzero values are considered as true.
BOOLEAN	Equal to BOOL
INT(size)	A medium integer. Signed range is from -2147483648 to 2147483647. 
    Unsigned range is from 0 to 4294967295. 
    The size parameter specifies the maximum display width (which is 255)
INTEGER(size)	Equal to INT(size)
FLOAT(size, d)	A floating point number. 
    The total number of digits is specified in size. 
    The number of digits after the decimal point is specified in the d parameter. 
    This syntax is deprecated in MySQL 8.0.17, and it will be removed in future MySQL versions
DOUBLE(size, d)	A normal-size floating point number. 
    The total number of digits is specified in size. 
    The number of digits after the decimal point is specified in the d parameter
DECIMAL(size, d)	An exact fixed-point number. 
    The total number of digits is specified in size. 
    The number of digits after the decimal point is specified in the d parameter. 
    The maximum number for size is 65. The maximum number for d is 30. 
    The default value for size is 10. The default value for d is 0.

-Date and Time Data Types

DATE	A date. Format: YYYY-MM-DD. The supported range is from '1000-01-01' to '9999-12-31'
DATETIME(fsp)	A date and time combination. 
    Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1000-01-01 00:00:00' to '9999-12-31 23:59:59'. 
    Adding DEFAULT and ON UPDATE in the column definition to get automatic initialization and updating to the current date and time
YEAR	A year in four-digit format. Values allowed in four-digit format: 1901 to 2155, and 0000.
    MySQL 8.0 does not support year in two-digit format.


--Constraint
NOT NULL - Đảm bảo rằng một cột không thể có giá trị NULL.
DEFAULT - Cung cấp một giá trị mặc định cho một cột khi không có gì được chỉ định.
UNIQUE - Đảm bảo rằng tất cả các giá trị trong một cột là khác nhau.
PRIMARY Key - Xác định mỗi hàng / bản ghi là duy nhất trong một bảng cơ sở dữ liệu.
FOREIGN Key - Xác định một hàng / bản ghi là duy nhất trong bất kỳ bảng cơ sở dữ liệu khác.
CHECK - CHECK constraint đảm bảo rằng tất cả các giá trị trong một cột thỏa mãn một số điều kiện.
INDEX - Dùng để tạo và lấy dữ liệu từ cơ sở dữ liệu rất nhanh.

--Toàn vẹn dữ liệu
Thực thể toàn vẹn - Không có hàng trùng lặp trong một bảng.
Domain Integrity Thực thi kiểm tra tính hợp lệ cho một cột nhất định bằng cách hạn chế kiểu, định dạng hoặc phạm vi giá trị.
Tính toàn vẹn tham chiếu Các hàng không thể bị xóa, được sử dụng bởi các bản ghi khác.
Tính toàn vẹn do người dùng định nghĩa Thực thi một số quy tắc kinh doanh cụ thể không rơi vào thực thể, miền hoặc toàn vẹn tham chiếu.

--Toán tử 
-Toán tử 
=	Kiểm tra nếu các giá trị của hai toán hạng bằng nhau hay không, nếu có thì điều kiện trở thành true.	(a = b) là false.
!=	Kiểm tra nếu các giá trị của hai toán hạng bằng hoặc không, nếu các giá trị không bằng nhau thì điều kiện trở thành true.	(a != b) là true.
<>	Kiểm tra nếu các giá trị của hai toán hạng bằng hoặc không, nếu các giá trị không bằng nhau thì điều kiện trở thành true.	(a <> b) là true.
>	Kiểm tra nếu giá trị của toán hạng trái lớn hơn giá trị của toán hạng phải, nếu có thì điều kiện trở thành true.	(a > b) là là false.
<	Kiểm tra nếu giá trị của toán hạng trái nhỏ hơn giá trị của toán hạng phải, nếu có thì điều kiện trở thành true.	(a < b) là true.
>=	Kiểm tra nếu giá trị của toán hạng trái lớn hơn hoặc bằng giá trị của toán hạng phải, nếu có thì điều kiện trở thành true.	(a >= b) là là false.
<=	Kiểm tra nếu giá trị của toán hạng trái nhỏ hơn hoặc bằng giá trị của toán hạng phải, nếu có thì điều kiện trở thành true.	(a <= b) là true.
!<	Kiểm tra nếu giá trị của toán hạng trái không nhỏ hơn giá trị của toán hạng phải, nếu có thì điều kiện trở thành true.	(a !< b) là sai.
!>	Kiểm tra nếu giá trị của toán hạng trái không lớn hơn giá trị của toán hạng phải, nếu có thì điều kiện trở thành true.	(a! b) là true.

-Toán tử logic

ALL Toán tử ALL được sử dụng để so sánh một giá trị với tất cả các giá trị trong một tập hợp giá trị khác.	
AND Toán tử AND cho phép tồn tại nhiều điều kiện trong mệnh đề WHERE của câu lệnh SQL.
ANY Toán tử ANY được sử dụng để so sánh một giá trị với bất kỳ giá trị thích hợp nào trong danh sách theo điều kiện.
BETWEEN Toán tử BETWEEN được sử dụng để tìm kiếm các giá trị trong một tập các giá trị, với giá trị nhỏ nhất và giá trị lớn nhất.
EXISTS  Toán tử EXISTS được sử dụng để tìm kiếm sự tồn tại của một hàng trong một bảng được chỉ định đáp ứng một tiêu chí nhất định.
IN  Toán tử IN được sử dụng để so sánh một giá trị với một danh sách các giá trị văn bản đã được chỉ định.
LIKE    Toán tử LIKE được sử dụng để so sánh một giá trị với các giá trị tương tự sử dụng toán tử ký tự đại diện.
NOT Toán tử NOT đảo ngược ý nghĩa của toán tử logic mà nó được sử dụng. Ví dụ: NOT EXISTS, NOT BETWEEN, NOT IN, vv Đây là một toán tử phủ định.
OR  Toán tử OR được sử dụng để kết hợp nhiều điều kiện trong mệnh đề WHERE của câu lệnh SQL.
IS NULL Toán tử NULL được sử dụng để so sánh một giá trị với một giá trị NULL.
UNIQUE  Toán tử UNIQUE tìm kiếm tất cả các hàng của một bảng quy định cho tính duy nhất (không có bản sao).







